{"version":3,"sources":["Feedback/Feedback.module.css","Feedback/Section.js","Feedback/Statistics.js","Feedback/FeedbackOptions.js","Feedback/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","btn","type","name","onClick","shortid","generate","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","e","value","target","setState","prevState","this","Object","keys","feedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,QAAU,0BAA0B,IAAM,wB,iMCEnH,SAASC,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,SACpC,OACI,oCACI,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,KCLE,SAASG,EAAT,GAAkE,IAA7CC,EAA4C,EAA5CA,KAAKC,EAAuC,EAAvCA,QAAQC,EAA+B,EAA/BA,IAAIC,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,mBACvD,OACK,gCACW,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,U,oBCLL,SAASC,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,QAAQC,EAAkB,EAAlBA,gBAC7C,OACI,8BACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBAAQZ,UAAWC,IAAOY,IAA8BC,KAAK,SAASC,KAAMH,EAAQI,QAASN,EAA7F,SAA+GE,GAA3EK,IAAQC,iBCL7C,SAASV,EAAT,GAAqC,IAAXW,EAAU,EAAVA,QACrC,OACI,mBAAGnB,UAAWC,IAAOkB,QAArB,SAA+BA,I,ICGjCC,E,4MACJC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQlB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBkB,gCAAkC,WAChC,IAAMC,EAAgB,EAAKF,qBAErBC,EAA0C,IAD/B,EAAKF,MAAdlB,KAC+CqB,EACvD,OAAOC,KAAKC,MAAMH,I,EAGpBb,gBAAkB,SAACiB,GACjB,IAAMC,EAAQD,EAAEE,OAAOd,KACvB,EAAKe,UAAS,SAAAC,GAAS,sBACpBH,EAAQG,EAAUH,GAAS,O,4CAIhC,WAEE,MAA+BI,KAAKX,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAChBC,EAAS0B,KAAKV,qBACff,EAAqByB,KAAKT,kCAC1Bd,EAAUwB,OAAOC,KAAKF,KAAKX,OAGjC,OAEE,sBAAKrB,UAAWC,IAAOkC,SAAvB,UAEE,cAACtC,EAAD,CAASC,MAAM,wBAAf,SACE,cAACU,EAAD,CAAiBC,QAASA,EAASC,gBAAiBsB,KAAKtB,oBAG3D,cAACb,EAAD,CAASC,MAAM,aAAf,SACa,IAAVQ,EACD,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IACpB,cAAC,EAAD,CAAcY,QAAQ,+B,GAnDhBiB,aA4DHhB,IC/DfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5ab954c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__30sK5\",\"title\":\"Feedback_title__XQaem\",\"message\":\"Feedback_message__iOH1S\",\"btn\":\"Feedback_btn__mHHBS\"};","import PropTypes from 'prop-types'\r\nimport styles from './Feedback.module.css';\r\n\r\nexport default function Section ({title,children}) {\r\n    return (\r\n        <section>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n        \r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string\r\n}","import PropTypes from 'prop-types'\r\n\r\nexport default function Statistics({good,neutral,bad,total,positivePercentage}) {\r\n    return (\r\n         <div>\r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive feedback: {positivePercentage}%</p>\r\n                </div>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number\r\n}","import styles from './Feedback.module.css';\r\nimport PropTypes from 'prop-types'\r\nimport shortid from 'shortid';\r\n\r\nexport default function FeedbackOptions({options,onLeaveFeedback}) {\r\n    return (\r\n        <div>\r\n            {options.map(option => (\r\n                <button className={styles.btn} key={shortid.generate()} type=\"button\" name={option} onClick={onLeaveFeedback}>{option}</button>\r\n            ))}\r\n           \r\n        </div>        \r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    onLeaveFeedback: PropTypes.func\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport styles from './Feedback.module.css';\r\n\r\nexport default function FeedbackOptions({message}) {\r\n    return (\r\n        <p className={styles.message}>{message}</p>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    message: PropTypes.string\r\n}","import { Component } from 'react';\nimport './App.css';\nimport Section from './Feedback/Section';\nimport Statistics from './Feedback/Statistics';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Notification from './Feedback/Notification';\nimport styles from './Feedback/Feedback.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const totalFeedback = this.countTotalFeedback();\n    const { good } = this.state;\n    const countPositiveFeedbackPercentage = (good * 100) / totalFeedback\n    return Math.round(countPositiveFeedbackPercentage);\n  }\n\n  onLeaveFeedback = (e) => {\n    const value = e.target.name;\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n        \n  render() {\n\n    const { good, neutral, bad } = this.state;\n    const  total  = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const options = Object.keys(this.state);\n\n\n    return (\n      \n      <div className={styles.feedback}>\n        \n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total !== 0 ?\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage} />\n          : <Notification message=\"No feedback given\" />\n          }\n        </Section>\n                \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}